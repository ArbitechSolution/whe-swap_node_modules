{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\New folder\\\\whe-swap\\\\src\\\\pages\\\\Home\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { JSBI, Token } from '@pancakeswap-libs/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport useI18n from 'hooks/useI18n';\nimport './index.css';\nimport Cake from './logo_icon.png';\nimport logo from './logo.png';\n\nconst Swap = () => {\n  _s();\n\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$;\n\n  const loadedUrlParams = useDefaultsFromURLSearch();\n  const TranslateString = useI18n(); // token warning stuff\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const [transactionWarning, setTransactionWarning] = useState({\n    selectedToken: null,\n    purchaseType: null\n  });\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => c instanceof Token)) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null\n    });\n  };\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const [isExpertMode] = useExpertModeManager(); // get custom setting values for user\n\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance(); // swap state\n\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // modal and loading\n\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route; // check whether the user has approved the router on the input token\n\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage); // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false); // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput))); // the callback to execute the swap\n\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, deadline, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n\n    if (!swapCallback) {\n      return;\n    }\n\n    setSwapState(prevState => ({ ...prevState,\n      attemptingTxn: true,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    }));\n    swapCallback().then(hash => {\n      setSwapState(prevState => ({ ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: hash\n      }));\n    }).catch(error => {\n      setSwapState(prevState => ({ ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      }));\n    });\n  }, [priceImpactWithoutFee, swapCallback, setSwapState]); // errors\n\n  const [showInverted, setShowInverted] = useState(false); // warnings on slippage\n\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState(prevState => ({ ...prevState,\n      showConfirm: false\n    })); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [onUserInput, txHash, setSwapState]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState(prevState => ({ ...prevState,\n      tradeToConfirm: trade\n    }));\n  }, [trade]); // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n\n  const checkForWarning = useCallback((selected, purchaseType) => {\n    if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n      setTransactionWarning({\n        selectedToken: selected,\n        purchaseType\n      });\n    }\n  }, [setTransactionWarning]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n\n    if (inputCurrency.symbol === 'SYRUP') {\n      checkForWarning(inputCurrency.symbol, 'Selling');\n    }\n\n    if (inputCurrency.symbol === 'SAFEMOON') {\n      checkForWarning(inputCurrency.symbol, 'Selling');\n    }\n  }, [onCurrencySelection, setApprovalSubmitted, checkForWarning]);\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => {\n    onCurrencySelection(Field.OUTPUT, outputCurrency);\n\n    if (outputCurrency.symbol === 'SYRUP') {\n      checkForWarning(outputCurrency.symbol, 'Buying');\n    }\n\n    if (outputCurrency.symbol === 'SAFEMOON') {\n      checkForWarning(outputCurrency.symbol, 'Buying');\n    }\n  }, [onCurrencySelection, checkForWarning]);\n  useEffect(() => {\n    try {\n      document.body.classList.add('body');\n    } catch (e) {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"defi_main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            //  className=\"custom_logo_set\"\n            className: \"logo_wheswap\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8 offset-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"defi_heading\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Cake\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Connect with wheswap and bridge the gap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Swap, earn, yield stacks, welcome to the community driven platform, the home to DeFi.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"defi_btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/#/swap\",\n                className: \"btn button defi_button_bg mr_btn\",\n                style: {\n                  marginTop: '5px'\n                },\n                children: \"Enter App\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"btn button\",\n                style: {\n                  marginTop: '5px'\n                },\n                children: \"Learn More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"defi_price_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Coming Soon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"$WheSwap Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"defi_price_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Coming Soon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Total Liquidity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"defi_price_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Coming Soon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Total Volume\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"defi_price_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Coming Soon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Total Pairs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Swap, \"zuM7ch7iHkYJw3YDJxDq/fcjBDo=\", false, function () {\n  return [useDefaultsFromURLSearch, useI18n, useCurrency, useCurrency, useActiveWeb3React, useExpertModeManager, useUserDeadline, useUserSlippageTolerance, useSwapState, useDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useApproveCallbackFromTrade, useSwapCallback];\n});\n\n_c = Swap;\nexport default Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["D:/New folder/whe-swap/src/pages/Home/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ThemeContext","confirmPriceImpactWithoutFee","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","useI18n","Cake","logo","Swap","loadedUrlParams","TranslateString","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","transactionWarning","setTransactionWarning","selectedToken","purchaseType","urlLoadedTokens","filter","c","handleConfirmTokenWarning","handleConfirmWarning","account","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForWarning","selected","includes","handleInputSelect","inputCurrency","symbol","handleMaxInput","handleOutputSelect","outputCurrency","document","body","classList","add","e","marginTop"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pancakeswap-libs/uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Card, { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CardNav from 'components/CardNav'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\r\nimport TradePrice from 'components/swap/TradePrice'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport SyrupWarningModal from 'components/SyrupWarningModal'\r\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\r\nimport { useSwapCallback } from 'hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { LinkStyledButton } from 'components/Shared'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport Loader from 'components/Loader'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PageHeader from 'components/PageHeader'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport AppBody from '../AppBody'\r\nimport './index.css'\r\nimport Cake from './logo_icon.png'\r\nimport logo from './logo.png'\r\nconst Swap = () => {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n  const TranslateString = useI18n()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const [transactionWarning, setTransactionWarning] = useState<{\r\n    selectedToken: string | null\r\n    purchaseType: string | null\r\n  }>({\r\n    selectedToken: null,\r\n    purchaseType: null,\r\n  })\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const handleConfirmWarning = () => {\r\n    setTransactionWarning({\r\n      selectedToken: null,\r\n      purchaseType: null,\r\n    })\r\n  }\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: undefined,\r\n          txHash: hash,\r\n        }))\r\n      })\r\n      .catch((error) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        }))\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [onUserInput, txHash, setSwapState])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\r\n  }, [trade])\r\n\r\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\r\n  // If so, they will be alerted with a warning message.\r\n  const checkForWarning = useCallback(\r\n    (selected: string, purchaseType: string) => {\r\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\r\n        setTransactionWarning({\r\n          selectedToken: selected,\r\n          purchaseType,\r\n        })\r\n      }\r\n    },\r\n    [setTransactionWarning]\r\n  )\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      if (inputCurrency.symbol === 'SYRUP') {\r\n        checkForWarning(inputCurrency.symbol, 'Selling')\r\n      }\r\n      if (inputCurrency.symbol === 'SAFEMOON') {\r\n        checkForWarning(inputCurrency.symbol, 'Selling')\r\n      }\r\n    },\r\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      if (outputCurrency.symbol === 'SYRUP') {\r\n        checkForWarning(outputCurrency.symbol, 'Buying')\r\n      }\r\n      if (outputCurrency.symbol === 'SAFEMOON') {\r\n        checkForWarning(outputCurrency.symbol, 'Buying')\r\n      }\r\n    },\r\n    [onCurrencySelection, checkForWarning]\r\n  )\r\n  useEffect(() => {\r\n    try {\r\n      document.body.classList.add('body')\r\n    } catch (e) {}\r\n  }, [])\r\n  return (\r\n    <>\r\n      <section className=\"defi_main\">\r\n        <div className=\"container \">\r\n          <div className=\"row\">\r\n            <div\r\n              //  className=\"custom_logo_set\"\r\n              className=\"logo_wheswap\"\r\n            >\r\n              <img src={logo} />\r\n            </div>\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <div className=\"defi_heading\">\r\n                <img src={Cake} />\r\n                <h1>Connect with wheswap and bridge the gap</h1>\r\n                <p>Swap, earn, yield stacks, welcome to the community driven platform, the home to DeFi.</p>\r\n              </div>\r\n              <div className=\"defi_btn\">\r\n                <a href=\"/#/swap\" className=\"btn button defi_button_bg mr_btn\" style={{ marginTop: '5px' }}>\r\n                  Enter App\r\n                </a>\r\n                <a href=\"#\" className=\"btn button\" style={{ marginTop: '5px' }}>\r\n                  Learn More\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"defi_price_box\">\r\n                    <h1>Coming Soon</h1>\r\n\r\n                    <p>$WheSwap Price</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"defi_price_box\">\r\n                    <h1>Coming Soon</h1>\r\n\r\n                    <p>Total Liquidity</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"defi_price_box\">\r\n                    <h1>Coming Soon</h1>\r\n                    <p>Total Volume</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"defi_price_box\">\r\n                    <h1>Coming Soon</h1>\r\n\r\n                    <p>Total Pairs</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Swap\r\n"]},"metadata":{},"sourceType":"module"}