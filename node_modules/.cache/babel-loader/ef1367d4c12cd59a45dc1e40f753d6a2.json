{"ast":null,"code":"import{ChainId,WETH}from'@pancakeswap-libs/sdk';import{abi as IUniswapV2PairABI}from'@uniswap/v2-core/build/IUniswapV2Pair.json';import{useMemo}from'react';import ENS_ABI from'../constants/abis/ens-registrar.json';import ENS_PUBLIC_RESOLVER_ABI from'../constants/abis/ens-public-resolver.json';import{ERC20_BYTES32_ABI}from'../constants/abis/erc20';import ERC20_ABI from'../constants/abis/erc20.json';import WETH_ABI from'../constants/abis/weth.json';import{MULTICALL_ABI,MULTICALL_NETWORKS}from'../constants/multicall';import{getContract}from'../utils';import{useActiveWeb3React}from'./index';export function useContract1(address,ABI){var withSignerIfPossible=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,account=_useActiveWeb3React.account;return useMemo(function(){if(!address||!ABI||!library)return null;try{return getContract(address,ABI,library,withSignerIfPossible&&account?account:undefined);}catch(error){console.error('Failed to get contract',error);return null;}},[address,ABI,library,withSignerIfPossible,account]);}// returns null on errors\nfunction useContract(address,ABI){var withSignerIfPossible=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var _useActiveWeb3React2=useActiveWeb3React(),library=_useActiveWeb3React2.library,account=_useActiveWeb3React2.account;return useMemo(function(){if(!address||!ABI||!library)return null;try{return getContract(address,ABI,library,withSignerIfPossible&&account?account:undefined);}catch(error){console.error('Failed to get contract',error);return null;}},[address,ABI,library,withSignerIfPossible,account]);}export function useTokenContract(tokenAddress,withSignerIfPossible){return useContract(tokenAddress,ERC20_ABI,withSignerIfPossible);}export function useWETHContract(withSignerIfPossible){var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;return useContract(chainId?WETH[chainId].address:undefined,WETH_ABI,withSignerIfPossible);}export function useENSRegistrarContract(withSignerIfPossible){var _useActiveWeb3React4=useActiveWeb3React(),chainId=_useActiveWeb3React4.chainId;var address;if(chainId){switch(chainId){case ChainId.MAINNET:case ChainId.BSCTESTNET:}}return useContract(address,ENS_ABI,withSignerIfPossible);}export function useENSResolverContract(address,withSignerIfPossible){return useContract(address,ENS_PUBLIC_RESOLVER_ABI,withSignerIfPossible);}export function useBytes32TokenContract(tokenAddress,withSignerIfPossible){return useContract(tokenAddress,ERC20_BYTES32_ABI,withSignerIfPossible);}export function usePairContract(pairAddress,withSignerIfPossible){return useContract(pairAddress,IUniswapV2PairABI,withSignerIfPossible);}export function useMulticallContract(){var _useActiveWeb3React5=useActiveWeb3React(),chainId=_useActiveWeb3React5.chainId;return useContract(chainId&&MULTICALL_NETWORKS[chainId],MULTICALL_ABI,false);}","map":{"version":3,"sources":["D:/New folder/whe-swap/src/hooks/useContract.ts"],"names":["ChainId","WETH","abi","IUniswapV2PairABI","useMemo","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract1","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useContract","useTokenContract","tokenAddress","useWETHContract","chainId","useENSRegistrarContract","MAINNET","BSCTESTNET","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract"],"mappings":"AACA,OAASA,OAAT,CAAkBC,IAAlB,KAA8B,uBAA9B,CACA,OAASC,GAAG,GAAIC,CAAAA,iBAAhB,KAAyC,4CAAzC,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,4CAApC,CACA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,wBAAlD,CACA,OAASC,WAAT,KAA4B,UAA5B,CACA,OAASC,kBAAT,KAAmC,SAAnC,CACA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,OAAtB,CAA6CC,GAA7C,CAAqG,IAA9CC,CAAAA,oBAA8C,2DAAvB,IAAuB,yBAC7EJ,kBAAkB,EAD2D,CAClGK,OADkG,qBAClGA,OADkG,CACzFC,OADyF,qBACzFA,OADyF,CAG1G,MAAOf,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAI,CAACW,OAAD,EAAY,CAACC,GAAb,EAAoB,CAACE,OAAzB,CAAkC,MAAO,KAAP,CAClC,GAAI,CACF,MAAON,CAAAA,WAAW,CAACG,OAAD,CAAUC,GAAV,CAAeE,OAAf,CAAwBD,oBAAoB,EAAIE,OAAxB,CAAkCA,OAAlC,CAA4CC,SAApE,CAAlB,CACD,CAAC,MAAOC,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CAAc,wBAAd,CAAwCA,KAAxC,EACA,MAAO,KAAP,CACD,CACF,CARa,CAQX,CAACN,OAAD,CAAUC,GAAV,CAAeE,OAAf,CAAwBD,oBAAxB,CAA8CE,OAA9C,CARW,CAAd,CASD,CACD;AACA,QAASI,CAAAA,WAAT,CAAqBR,OAArB,CAAkDC,GAAlD,CAA0G,IAA9CC,CAAAA,oBAA8C,2DAAvB,IAAuB,0BAC3EJ,kBAAkB,EADyD,CAChGK,OADgG,sBAChGA,OADgG,CACvFC,OADuF,sBACvFA,OADuF,CAGxG,MAAOf,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAI,CAACW,OAAD,EAAY,CAACC,GAAb,EAAoB,CAACE,OAAzB,CAAkC,MAAO,KAAP,CAClC,GAAI,CACF,MAAON,CAAAA,WAAW,CAACG,OAAD,CAAUC,GAAV,CAAeE,OAAf,CAAwBD,oBAAoB,EAAIE,OAAxB,CAAkCA,OAAlC,CAA4CC,SAApE,CAAlB,CACD,CAAC,MAAOC,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CAAc,wBAAd,CAAwCA,KAAxC,EACA,MAAO,KAAP,CACD,CACF,CARa,CAQX,CAACN,OAAD,CAAUC,GAAV,CAAeE,OAAf,CAAwBD,oBAAxB,CAA8CE,OAA9C,CARW,CAAd,CASD,CAED,MAAO,SAASK,CAAAA,gBAAT,CAA0BC,YAA1B,CAAiDR,oBAAjD,CAAkG,CACvG,MAAOM,CAAAA,WAAW,CAACE,YAAD,CAAejB,SAAf,CAA0BS,oBAA1B,CAAlB,CACD,CAED,MAAO,SAASS,CAAAA,eAAT,CAAyBT,oBAAzB,CAA0E,0BAC3DJ,kBAAkB,EADyC,CACvEc,OADuE,sBACvEA,OADuE,CAE/E,MAAOJ,CAAAA,WAAW,CAACI,OAAO,CAAG1B,IAAI,CAAC0B,OAAD,CAAJ,CAAcZ,OAAjB,CAA2BK,SAAnC,CAA8CX,QAA9C,CAAwDQ,oBAAxD,CAAlB,CACD,CAED,MAAO,SAASW,CAAAA,uBAAT,CAAiCX,oBAAjC,CAAkF,0BACnEJ,kBAAkB,EADiD,CAC/Ec,OAD+E,sBAC/EA,OAD+E,CAEvF,GAAIZ,CAAAA,OAAJ,CACA,GAAIY,OAAJ,CAAa,CACX,OAAQA,OAAR,EACE,IAAK3B,CAAAA,OAAO,CAAC6B,OAAb,CACA,IAAK7B,CAAAA,OAAO,CAAC8B,UAAb,CAFF,CAID,CACD,MAAOP,CAAAA,WAAW,CAACR,OAAD,CAAUV,OAAV,CAAmBY,oBAAnB,CAAlB,CACD,CAED,MAAO,SAASc,CAAAA,sBAAT,CAAgChB,OAAhC,CAA6DE,oBAA7D,CAA8G,CACnH,MAAOM,CAAAA,WAAW,CAACR,OAAD,CAAUT,uBAAV,CAAmCW,oBAAnC,CAAlB,CACD,CAED,MAAO,SAASe,CAAAA,uBAAT,CAAiCP,YAAjC,CAAwDR,oBAAxD,CAAyG,CAC9G,MAAOM,CAAAA,WAAW,CAACE,YAAD,CAAelB,iBAAf,CAAkCU,oBAAlC,CAAlB,CACD,CAED,MAAO,SAASgB,CAAAA,eAAT,CAAyBC,WAAzB,CAA+CjB,oBAA/C,CAAgG,CACrG,MAAOM,CAAAA,WAAW,CAACW,WAAD,CAAc/B,iBAAd,CAAiCc,oBAAjC,CAAlB,CACD,CAED,MAAO,SAASkB,CAAAA,oBAAT,EAAiD,0BAClCtB,kBAAkB,EADgB,CAC9Cc,OAD8C,sBAC9CA,OAD8C,CAEtD,MAAOJ,CAAAA,WAAW,CAACI,OAAO,EAAIhB,kBAAkB,CAACgB,OAAD,CAA9B,CAAyCjB,aAAzC,CAAwD,KAAxD,CAAlB,CACD","sourcesContent":["import { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap-libs/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { useMemo } from 'react'\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\r\nimport ERC20_ABI from '../constants/abis/erc20.json'\r\nimport WETH_ABI from '../constants/abis/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\r\nimport { getContract } from '../utils'\r\nimport { useActiveWeb3React } from './index'\r\nexport function useContract1(address: string | any, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.BSCTESTNET:\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}