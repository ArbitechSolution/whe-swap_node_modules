{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport useGetPriceData from './useGetPriceData';\n\nconst useGetDocumentTitlePrice = () => {\n  _s();\n\n  const priceData = useGetPriceData();\n  const cakePriceUsd = parseFloat('0'); // priceData ? parseFloat(priceData?.data[CAKE?.address]?.price ?? 0) : 0\n\n  const cakePriceUsdString = Number.isNaN(cakePriceUsd) || cakePriceUsd === 0 ? '' : ` - $${cakePriceUsd.toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3\n  })}`;\n  useEffect(() => {\n    document.title = `WheSwap${cakePriceUsdString}`;\n  }, [cakePriceUsdString]);\n};\n\n_s(useGetDocumentTitlePrice, \"RKxTg47fbxWr8YqZdhpZxHrLMxs=\", false, function () {\n  return [useGetPriceData];\n});\n\nexport default useGetDocumentTitlePrice;","map":{"version":3,"sources":["D:/New folder/whe-swap/src/hooks/useGetDocumentTitlePrice.ts"],"names":["useEffect","useGetPriceData","useGetDocumentTitlePrice","priceData","cakePriceUsd","parseFloat","cakePriceUsdString","Number","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,SAAS,GAAGF,eAAe,EAAjC;AAEA,QAAMG,YAAY,GAAGC,UAAU,CAAC,GAAD,CAA/B,CAHqC,CAIrC;;AAEA,QAAMC,kBAAkB,GACtBC,MAAM,CAACC,KAAP,CAAaJ,YAAb,KAA8BA,YAAY,KAAK,CAA/C,GACI,EADJ,GAEK,OAAMA,YAAY,CAACK,cAAb,CAA4BC,SAA5B,EAAuC;AAC5CC,IAAAA,qBAAqB,EAAE,CADqB;AAE5CC,IAAAA,qBAAqB,EAAE;AAFqB,GAAvC,CAGJ,EANT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACC,KAAT,GAAkB,UAASR,kBAAmB,EAA9C;AACD,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAGD,CAjBD;;GAAMJ,wB;UACcD,e;;;AAiBpB,eAAeC,wBAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport useGetPriceData from './useGetPriceData'\r\nimport { CAKE } from '../constants'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const priceData = useGetPriceData()\r\n\r\n  const cakePriceUsd = parseFloat('0')\r\n  // priceData ? parseFloat(priceData?.data[CAKE?.address]?.price ?? 0) : 0\r\n\r\n  const cakePriceUsdString =\r\n    Number.isNaN(cakePriceUsd) || cakePriceUsd === 0\r\n      ? ''\r\n      : ` - $${cakePriceUsd.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `WheSwap${cakePriceUsdString}`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n"]},"metadata":{},"sourceType":"module"}